{
    "modified_SQL_query": "CREATE VIEW INVESTOR_OVERVIEW AS SELECT i.investor_id, i.first_name, i.last_name, i.email, p.portfolio_id, p.portfolio_name, recent_trades.trade_id, recent_trades.trade_date, recent_trades.ticker, recent_trades.company_name, recent_trades.trade_type, recent_trades.quantity, recent_trades.price_per_share, recent_trades.total_trade_value, TYPE_CONVERSION(dividends_received.total_dividends) AS total_dividends, TYPE_CONVERSION(average_performance.avg_performance) AS average_performance, TYPE_CONVERSION(total_investment.total_value) AS total_investment_value FROM investors AS i JOIN portfolios AS p ON EQ(i.investor_id, p.investor_id) JOIN (subquery_1) AS recent_trades ON EQ(p.portfolio_id, recent_trades.portfolio_id) JOIN (subquery_2) AS dividends_received ON EQ(p.portfolio_id, dividends_received.portfolio_id) JOIN (subquery_3) AS average_performance ON EQ(p.portfolio_id, average_performance.portfolio_id) JOIN (subquery_4) AS total_investment ON EQ(p.portfolio_id, total_investment.portfolio_id) WHERE COMPARE(i.join_date, DATEADD(year, -1, CURRENT_TIMESTAMP())) ORDER BY i.investor_id, p.portfolio_id",
    "subquery_dictionary": {
        "subquery_1": "SELECT t.trade_id, t.portfolio_id, s.ticker, s.company_name, t.trade_date, t.trade_type, t.quantity, t.price_per_share, (MUL(t.quantity, t.price_per_share)) AS total_trade_value FROM trades AS t JOIN stocks AS s ON EQ(t.stock_id, s.stock_id) WHERE COMPARE(t.trade_date, DATEADD(month, -1, CURRENT_TIMESTAMP()))",
        "subquery_2": "SELECT t.portfolio_id, SUM(MUL(d.dividend_amount, t.quantity)) AS total_dividends FROM trades AS t JOIN dividends AS d ON EQ(t.stock_id, d.stock_id) WHERE COMPARE(d.dividend_date, DATEADD(year, -1, CURRENT_TIMESTAMP())) GROUP BY t.portfolio_id",
        "subquery_3": "SELECT t.portfolio_id, AVG(md.closing_price) AS avg_performance FROM trades AS t JOIN market_data AS md ON EQ(t.stock_id, md.stock_id) WHERE COMPARE(md.market_date, DATEADD(year, -1, CURRENT_TIMESTAMP())) GROUP BY t.portfolio_id",
        "subquery_4": "SELECT t.portfolio_id, SUM(MUL(t.quantity, md.closing_price)) AS total_value FROM trades AS t JOIN market_data AS md ON EQ(t.stock_id, md.stock_id) WHERE EQ(md.market_date, (subquery_5)) GROUP BY t.portfolio_id",
        "subquery_5": "SELECT MAX(market_date) FROM market_data"
    },
    "type": "update_or_create_select"
}