{
    "modified_SQL_query": "CREATE VIEW ORDER_RECONCILIATION AS SELECT A.CustomerId, C.CustomerName, COUNT( DISTINCT A.OrderId) TotalNBOrders, COUNT( DISTINCT A.InvoiceId) TotalNBInvoices, SUM(A.UnitPrice*A.Quantity)AS OrdersTotalValue, SUM(A.UnitPriceI * A.QuantityI) AS InvoicesTotalValue, ABS(SUM(A.UnitPrice * A.Quantity) - SUM(A.UnitPriceI*A.QuantityI)) AS AbsoluteValueDifference FROM subquery1_1 AS A, Sales.Customers As C WHERE A.CustomerID = C.CustomerID GROUP BY A.CustomerID, C.CustomerName ORDER BY AbsoluteValueDifference DESC, TotalNBOrders, CustomerName",
    "subquery_dictionary": {
        "subquery1_1": "( SELECT O.CustomerID, O.OrderId, NULL AS InvoiceID, OL.UnitPrice, OL.Quantity, 0 AS UnitPriceI, 0 AS QuantityI, OL.OrderLineID, NULL AS InvoiceLineID FROM Sales.Orders As O, Sales.OrderLines AS OL WHERE O.OrderId = OL.OrderID AND EXISTS (subquery2_1) UNION SELECT I.CustomerID, NULL AS OrderId, I.InvoiceID, 0 AS UnitPriceO, 0 AS QuantityO, IL.UnitPrice, IL.Quantity, NULL AS OrderLineID, InvoiceLineID FROM Sales.Invoices AS I, Sales.InvoiceLines AS IL WHERE I.InvoiceID = IL.InvoiceID )",
        "subquery2_1": "( SELECT II.OrderId FROM Sales.Invoices AS II WHERE II.OrderID = O.OrderID )"
    }
}