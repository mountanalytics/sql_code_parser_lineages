{
    "modified_SQL_query": "INSERT INTO PROCESS_DB.dividend_analysis ( stock_id, ticker, company_name, total_dividends_paid_last_year, avg_dividend_yield_last_year, max_dividend_yield_last_year, min_dividend_yield_last_year, total_dividend_payments, avg_dividend_payment, max_dividend_payment, min_dividend_payment, total_investors, total_portfolios, most_dividend_received_investor, least_dividend_received_investor, total_investment_value_current, total_trade_volume_last_year, avg_closing_price_last_year, highest_trade_investor, lowest_trade_investor, avg_trade_value ) SELECT s.stock_id, s.ticker, s.company_name, SUM(d.dividend_amount * t.quantity) FILTER (WHERE d.dividend_date >= DATEADD(year, -1, GETDATE())) AS total_dividends_paid_last_year, AVG(CASE WHEN md.closing_price > 0 THEN d.dividend_amount / md.closing_price ELSE 0 END) FILTER (WHERE d.dividend_date >= DATEADD(year, -1, GETDATE())) AS avg_dividend_yield_last_year, MAX(CASE WHEN md.closing_price > 0 THEN d.dividend_amount / md.closing_price ELSE 0 END) FILTER (WHERE d.dividend_date >= DATEADD(year, -1, GETDATE())) AS max_dividend_yield_last_year, MIN(CASE WHEN md.closing_price > 0 THEN d.dividend_amount / md.closing_price ELSE 0 END) FILTER (WHERE d.dividend_date >= DATEADD(year, -1, GETDATE())) AS min_dividend_yield_last_year, COUNT(d.dividend_id) AS total_dividend_payments, AVG(d.dividend_amount) AS avg_dividend_payment, MAX(d.dividend_amount) AS max_dividend_payment, MIN(d.dividend_amount) AS min_dividend_payment, COUNT(DISTINCT i.investor_id) AS total_investors, COUNT(DISTINCT p.portfolio_id) AS total_portfolios, (SELECT i.investor_id FROM subquery1_1) AS most_dividend_received_investor, (SELECT i.investor_id FROM subquery1_2) AS least_dividend_received_investor, SUM(t.quantity * md.closing_price) FILTER (WHERE md.market_date = (SELECT MAX(market_date) FROM subquery1_3)) AS total_investment_value_current, SUM(md.volume) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS total_trade_volume_last_year, AVG(md.closing_price) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS avg_closing_price_last_year, (SELECT i.investor_id FROM subquery1_4) AS highest_trade_investor, (SELECT i.investor_id FROM subquery1_5) AS lowest_trade_investor, AVG(t.quantity * t.price_per_share) AS avg_trade_value FROM SOURCE_DB.stocks s JOIN SOURCE_DB.trades t ON s.stock_id = t.stock_id JOIN SOURCE_DB.portfolios p ON t.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id JOIN SOURCE_DB.dividends d ON s.stock_id = d.stock_id JOIN SOURCE_DB.market_data md ON s.stock_id = md.stock_id GROUP BY s.stock_id, s.ticker, s.company_name",
    "subquery_dictionary": {
        "subquery1_1": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY SUM(d.dividend_amount * t1.quantity) DESC LIMIT 1",
        "subquery1_2": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY SUM(d.dividend_amount * t1.quantity) ASC LIMIT 1",
        "subquery1_3": "SELECT MAX(market_date) FROM SOURCE_DB.market_data",
        "subquery1_4": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY SUM(t1.quantity * t1.price_per_share) DESC LIMIT 1",
        "subquery1_5": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY SUM(t1.quantity * t1.price_per_share) ASC LIMIT 1"
    }
}