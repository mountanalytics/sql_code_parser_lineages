{
    "modified_SQL_query": "INSERT INTO PROCESS_DB.stock_performance ( stock_id, ticker, company_name, sector, total_trades_last_month, total_trade_value_last_month, total_dividends_last_year, avg_closing_price_last_year, max_closing_price_last_year, min_closing_price_last_year, avg_volume_last_year, total_trade_volume_last_year, most_active_investor, least_active_investor, highest_trade_investor, lowest_trade_investor, total_investors, total_portfolios, max_trade_value, min_trade_value, avg_trade_value ) SELECT s.stock_id, s.ticker, s.company_name, s.sector, COUNT(t.trade_id) FILTER (WHERE t.trade_date >= DATEADD(month, -1, GETDATE())) AS total_trades_last_month, SUM(t.quantity * t.price_per_share) FILTER (WHERE t.trade_date >= DATEADD(month, -1, GETDATE())) AS total_trade_value_last_month, SUM(d.dividend_amount) FILTER (WHERE d.dividend_date >= DATEADD(year, -1, GETDATE())) AS total_dividends_last_year, AVG(md.closing_price) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS avg_closing_price_last_year, MAX(md.closing_price) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS max_closing_price_last_year, MIN(md.closing_price) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS min_closing_price_last_year, AVG(md.volume) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS avg_volume_last_year, SUM(md.volume) FILTER (WHERE md.market_date >= DATEADD(year, -1, GETDATE())) AS total_trade_volume_last_year, subquery1_1 AS most_active_investor, subquery1_2 AS least_active_investor, subquery1_3 AS highest_trade_investor, subquery1_4 AS lowest_trade_investor, COUNT(DISTINCT i.investor_id) AS total_investors, COUNT(DISTINCT p.portfolio_id) AS total_portfolios, MAX(t.quantity * t.price_per_share) AS max_trade_value, MIN(t.quantity * t.price_per_share) AS min_trade_value, AVG(t.quantity * t.price_per_share) AS avg_trade_value FROM SOURCE_DB.stocks s JOIN SOURCE_DB.trades t ON s.stock_id = t.stock_id JOIN SOURCE_DB.portfolios p ON t.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id JOIN SOURCE_DB.dividends d ON s.stock_id = d.stock_id JOIN SOURCE_DB.market_data md ON s.stock_id = md.stock_id GROUP BY s.stock_id, s.ticker, s.company_name, s.sector",
    "subquery_dictionary": {
        "subquery1_1": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY COUNT(t1.trade_id) DESC LIMIT 1",
        "subquery1_2": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY COUNT(t1.trade_id) ASC LIMIT 1",
        "subquery1_3": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY SUM(t1.quantity * t1.price_per_share) DESC LIMIT 1",
        "subquery1_4": "SELECT i.investor_id FROM SOURCE_DB.trades t1 JOIN SOURCE_DB.portfolios p ON t1.portfolio_id = p.portfolio_id JOIN SOURCE_DB.investors i ON p.investor_id = i.investor_id WHERE t1.stock_id = s.stock_id GROUP BY i.investor_id ORDER BY SUM(t1.quantity * t1.price_per_share) ASC LIMIT 1"
    }
}